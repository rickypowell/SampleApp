# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.54.2"

# as specified on https://docs.fastlane.tools/best-practices/continuous-integration/
setup_travis

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."


  end

  desc "Runs all the tests"
  lane :test do
    os = [
      # "9.0",
      # "9.1",
      # "9.2",
      # "9.3",
      # "10.0",
      # "10.1",
      # "10.2",
      "10.3"
    ]
    devices = [
        # "iPhone 5",
        # "iPhone 5s",
        # "iPhone 6",
        # "iPhone 6s",
        # "iPhone 6 Plus",
        # "iPhone 6s Plus",
        # "iPhone SE",
        # "iPhone 7",
        "iPhone 7 Plus"
    ]
    test_devices = []
    os.each do |item|
      devices.each do |d|
        test_devices.push("#{d} #{item}")
      end
    end
    puts "=== Test Devices [BEGIN] ==="
    test_devices.each do |item|
      puts "\t#{item}"
    end
    puts "=== Test Devices [END] ==="
    import_certificate(
      certificate_path: "scripts/certs/dist.cer",
      certificate_password: ENV["KEY_PASSWORD"] || "default",
      keychain_name: "login.keychain-db"
    )
    import_certificate(
      certificate_path: "scripts/certs/dist.p12",
      certificate_password: ENV["KEY_PASSWORD"] || "default",
      keychain_name: "login.keychain-db"
    )
    # cert
    sigh(adhoc: true, filename: "AdHocSampleAppDist.mobileprovision")
    scan(devices: devices)
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    match(type: "development") # more information: https://codesigning.guide
    gym(scheme: "SampleApp") # Build your app - more options available
    # pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    # match(type: "appstore")
    # snapshot
    gym(scheme: "SampleApp") # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful
    increment_build_number
    clean_build_artifacts
    commit_version_bump
    push_to_git_remote(
      remote_branch: "master", # optional, default is set to local_branch
      tags: false     # optional, default: true
    )
    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
    puts "=== Identities [BEGIN] ==="
    sh "security find-identity -v -p codesigning"
    puts "=== Identities [END] ==="
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded.
# Learn more at https://github.com/fastlane/fastlane#metrics
